{"version":3,"file":"static/js/884.cc40d0a3.chunk.js","mappings":"sMAuEA,UAjEqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAQhD,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBT,GAAIU,MAAK,SAAAC,GACvBZ,EAASY,EAEV,GACF,GAAE,CAACX,IACCF,EAEL,OACE,iBAAKc,UAAU,eAAf,WACE,SAAC,KAAD,CAAMC,GAAIT,EAASU,QAASF,UAAU,OAAtC,sBAGA,mBACA,iBAAKA,UAAU,QAAf,WACE,gBACEA,UAAU,MACVG,IACEjB,EAAMkB,YAAN,0CACuClB,EAAMkB,aA3BvD,8EA8BQC,IAAKnB,EAAMoB,MACXC,MAAM,WAER,iBAAKP,UAAU,WAAf,WACE,wBAAKd,EAAMoB,SACX,sCAAcpB,EAAMsB,aACpB,oCAAYtB,EAAMuB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,SACjD,kDACyB,IACtB3B,EAAM4B,qBAAqBJ,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,SAEtD,iDACwB,IACrB3B,EAAM6B,qBAAqBL,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,SAEtD,wCAAgB3B,EAAM8B,qBAI1B,2BACE,mBACA,oDACA,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,wBAEF,sBAEF,SAAC,EAAAgB,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAIP,C,2JCjEKC,E,OAASC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CAAEC,QAJI,sCAOT,SAASC,IACd,OAAOL,EAAOM,IAAI,uBAAuB3B,MAAK,SAAA4B,GAAG,OAAIA,EAAI3B,IAAR,GAClD,CAEM,SAAS4B,EAAaC,GAC3B,OAAOT,EACJM,IAAI,gBAAiB,CAAEH,OAAQ,CAAEM,MAAAA,KACjC9B,MAAK,SAAA4B,GAAG,OAAIA,EAAI3B,IAAR,GACZ,CAEM,SAASF,EAAgBT,GAC9B,OAAO+B,EAAOM,IAAP,iBAAqBrC,IAAMU,MAAK,SAAA4B,GAAG,OAAIA,EAAI3B,IAAR,GAC3C,CAEM,SAAS8B,EAAazC,GAC3B,OAAO+B,EAAOM,IAAP,iBAAqBrC,EAArB,aAAmCU,MAAK,SAAA4B,GAAG,OAAIA,EAAI3B,IAAR,GACnD,CAEM,SAAS+B,EAAgB1C,GAC9B,OAAO+B,EAAOM,IAAP,iBAAqBrC,EAArB,aAAmCU,MAAK,SAAA4B,GAAG,OAAIA,EAAI3B,IAAR,GACnD,C","sources":["pages/MovieDetails.jsx","service/movieApi.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { getMovieDetails } from '../service/movieApi.js';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    getMovieDetails(id).then(data => {\n      setMovie(data);\n      // console.log(data);\n    });\n  }, [id]);\n  if (!movie) return;\n\n  return (\n    <div className=\"movie-search\">\n      <Link to={backLink.current} className=\"back\">\n        Go Back\n      </Link>\n      <hr />\n      <div className=\"title\">\n        <img\n          className=\"img\"\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n              : defaultImg\n          }\n          alt={movie.title}\n          width=\"300px\"\n        />\n        <div className=\"paragraf\">\n          <h2>{movie.title}</h2>\n          <p>Overview: {movie.overview}</p>\n          <p>Genres: {movie.genres.map(el => el.name).join(',')}</p>\n          <p>\n            Production companies :{' '}\n            {movie.production_companies.map(el => el.name).join(',')}\n          </p>\n          <p>\n            Production countries:{' '}\n            {movie.production_countries.map(el => el.name).join(',')}\n          </p>\n          <p>Popularity: {movie.popularity}</p>\n        </div>\n      </div>\n\n      <ul>\n        <hr />\n        <h4>Additional Information</h4>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n        <hr />\n      </ul>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n// genres:([{obj} {obj} {obj}]);\n// original_title;overview;title;poster_path;popularity\n","import axios from 'axios';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nconst axios2 = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: API_KEY },\n});\n\nexport function getTrending() {\n  return axios2.get('/trending/movie/day').then(res => res.data);\n}\n\nexport function searchMovies(query) {\n  return axios2\n    .get('/search/movie', { params: { query } })\n    .then(res => res.data);\n}\n\nexport function getMovieDetails(id) {\n  return axios2.get(`/movie/${id}`).then(res => res.data);\n}\n\nexport function getMovieCast(id) {\n  return axios2.get(`/movie/${id}/credits`).then(res => res.data);\n}\n\nexport function getMovieReviews(id) {\n  return axios2.get(`/movie/${id}/reviews`).then(res => res.data);\n}\n\n// const fetch = require('node-fetch');\n\n// const url = 'https://api.themoviedb.org/3/authentication';\n// const options = {method: 'GET', headers: {accept: 'application/json'}};\n\n// fetch(url, options)\n//   .then(res => res.json())\n//   .then(json => console.log(json))\n"],"names":["useState","movie","setMovie","id","useParams","location","useLocation","backLink","useRef","state","from","useEffect","getMovieDetails","then","data","className","to","current","src","poster_path","alt","title","width","overview","genres","map","el","name","join","production_companies","production_countries","popularity","Suspense","fallback","axios2","axios","baseURL","params","api_key","getTrending","get","res","searchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}